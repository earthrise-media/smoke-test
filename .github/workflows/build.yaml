name: Build

on:
  push:

jobs:

  build:
    runs-on: ubuntu-latest
    container: golang

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest          

      - name: Compile
        run: go build -v .

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Prod version
        if: github.ref == 'refs/heads/main'
        run: |
          version=$(cat version.txt)
          echo "version=$version" >> $GITHUB_ENV

      - name: Get Dev Version
        if: github.ref == 'refs/heads/dev'
        run: |
          version=$(cat ./version.txt)
          timestamp=$(date +%s)
          echo "version=$version-dev-$timestamp" >> $GITHUB_ENV

      - name: Build, tag, and push the image
        id: build-image
        run: |          
          docker build . -t ghcr.io/earthrise-media/smoke-test:${{ env.version }} --build-arg VERSION=$IMAGE_TAG --build-arg DATE="$(date --rfc-3339=seconds)" --build-arg REVISION="$GITHUB_SHA" .        
          docker push ghcr.io/earthrise-media/smoke-test:${{ env.version }}